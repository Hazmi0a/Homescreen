[{"C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\index.js":"1","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\reportWebVitals.js":"2","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\App.js":"3","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\i18n.js":"4","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\history.js":"5","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\components\\ConfirmationDialogProvider\\ConfirmationDialogProvider.js":"6","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\components\\StatusBar\\StatusBar.js":"7","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\components\\NavigationBar\\NavigationBar.js":"8","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\pages\\index.jsx":"9","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\pages\\Settings.jsx":"10","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\pages\\InputScreen.jsx":"11","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\components\\RecievingFax\\RecievingFax.js":"12","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\components\\SendingFax\\SendingFax.js":"13","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\locate\\en\\english.js":"14","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\locate\\ar\\arabic.js":"15","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\pages\\systemInfo.jsx":"16","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\pages\\SystemInfo.jsx":"17","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\languageContext.js":"18"},{"size":726,"mtime":1616065527510,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1614153614624,"results":"21","hashOfConfig":"20"},{"size":2446,"mtime":1616574177703,"results":"22","hashOfConfig":"20"},{"size":1088,"mtime":1615883836772,"results":"23","hashOfConfig":"20"},{"size":89,"mtime":1614245683979,"results":"24","hashOfConfig":"20"},{"size":3495,"mtime":1616050355418,"results":"25","hashOfConfig":"20"},{"size":2466,"mtime":1616587016534,"results":"26","hashOfConfig":"20"},{"size":1383,"mtime":1616395955534,"results":"27","hashOfConfig":"20"},{"size":5160,"mtime":1616654304514,"results":"28","hashOfConfig":"20"},{"size":3764,"mtime":1616587540526,"results":"29","hashOfConfig":"20"},{"size":2744,"mtime":1614245683980,"results":"30","hashOfConfig":"20"},{"size":1216,"mtime":1614153614617,"results":"31","hashOfConfig":"20"},{"size":1235,"mtime":1614153614617,"results":"32","hashOfConfig":"20"},{"size":475,"mtime":1614153614621,"results":"33","hashOfConfig":"20"},{"size":777,"mtime":1614153614620,"results":"34","hashOfConfig":"20"},{"size":886,"mtime":1615377787153,"results":"35","hashOfConfig":"20"},{"size":4268,"mtime":1616396142957,"results":"36","hashOfConfig":"20"},{"size":904,"mtime":1615968688273,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"ibybgw",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"81","messages":"82","errorCount":2,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"41"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"41"},"C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\index.js",["89","90","91","92"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./style/index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { LangContext } from \"./languageContext\";\r\nimport \"./components/NavigationBar/nav-size.css\";\r\n\r\n//import context from \"react-bootstrap/esm/AccordionContext\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["93","94"],"C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\reportWebVitals.js",[],"C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\App.js",["95","96","97","98","99"],"import \"./App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./style/index.css\";\r\nimport \"./style/keyboard.css\";\r\nimport { NavigationBar } from \"./components/NavigationBar/NavigationBar\";\r\nimport { StatusBar } from \"./components/StatusBar/StatusBar\";\r\nimport { I18nextProvider } from \"react-i18next\";\r\nimport i18n from \"./i18n\";\r\nimport {\r\n  ConfirmationDialogProvider,\r\n  useConfirmationDialog,\r\n} from \"./components/ConfirmationDialogProvider/ConfirmationDialogProvider\";\r\nimport Home from \"./pages/index\";\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Router,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { Settings } from \"./pages/Settings\";\r\nimport { InputScreen } from \"./pages/InputScreen\";\r\nimport { SystemInfo } from \"./pages/SystemInfo\";\r\nimport history from \"./history\";\r\nimport { LangContext } from \"./languageContext\";\r\nimport \"./components/NavigationBar/nav-size.css\";\r\n\r\nfunction App() {\r\n  const [Side, setSide] = useState(\"pad RTL\");\r\n  const [context, setContext] = useState({\r\n    pad: \"pad RTL\",\r\n    lang: \"ar\",\r\n  });\r\n  return (\r\n    <LangContext.Provider value={[context, setContext]}>\r\n      <LangContext.Consumer value={[context, setContext]}>\r\n        {(context) =>\r\n          i18n.changeLanguage(context.lang) && (\r\n            <I18nextProvider i18n={i18n}>\r\n              <ConfirmationDialogProvider>\r\n                <Router history={history}>\r\n                  <BrowserRouter>\r\n                    <StatusBar />\r\n                    <Switch>\r\n                      <Route exact path=\"/settings\">\r\n                        <Settings />\r\n                      </Route>\r\n                      <Route exact path=\"/\">\r\n                        <Home />\r\n                      </Route>\r\n                      <Route path=\"/password\">\r\n                        <InputScreen />\r\n                      </Route>\r\n                      <Route path=\"/settings/SystemInfo\">\r\n                        <SystemInfo />\r\n                      </Route>\r\n                      <Route path=\"*\">\r\n                        <Redirect to=\"/\" />\r\n                      </Route>\r\n                    </Switch>\r\n                    <NavigationBar />\r\n                  </BrowserRouter>\r\n                </Router>\r\n              </ConfirmationDialogProvider>\r\n            </I18nextProvider>\r\n          )\r\n        }\r\n      </LangContext.Consumer>\r\n    </LangContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\i18n.js",["100"],"import i18n from \"i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport XHR from \"i18next-xhr-backend\";\r\nimport languageEN from \"./locate/en/translate.json\";\r\nimport languageAR from \"./locate/ar/translate.json\";\r\nimport LangContext from \"./languageContext\";\r\n\r\ni18n\r\n  .use(XHR)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources: {\r\n      en: languageEN,\r\n      ar: languageAR,\r\n    },\r\n    /* default language when load the website in browser */\r\n    lng: \"ar\",\r\n    /* When react i18next not finding any language to as default in borwser */\r\n    fallbackLng: \"en\",\r\n    /* debugger For Development environment */\r\n    debug: true,\r\n    ns: [\"translations\"],\r\n    defaultNS: \"translations\",\r\n    keySeparator: \".\",\r\n    interpolation: {\r\n      escapeValue: false,\r\n      formatSeparator: \",\",\r\n    },\r\n    react: {\r\n      wait: true,\r\n      bindI18n: \"languageChanged loaded\",\r\n      bindStore: \"added removed\",\r\n      nsMode: \"default\",\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\history.js",[],"C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\components\\ConfirmationDialogProvider\\ConfirmationDialogProvider.js",["101","102","103","104","105","106","107","108","109","110"],"import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst ConfirmationDialog = ({\r\n  open,\r\n  title,\r\n  message,\r\n  onConfirm,\r\n  onDismiss,\r\n  type,\r\n}) => {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  // based on the type of the dialog wanted, 0 without action buttons, 1 with OK button\r\n  return type == 0 ? (\r\n    <>\r\n      <Modal centered show={open} onHide={onDismiss}>\r\n        <Modal.Header>\r\n          <Modal.Title>{t(title)}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{t(message)}</Modal.Body>\r\n      </Modal>\r\n    </>\r\n  ) : type == 1 ? (\r\n    <>\r\n      {\" \"}\r\n      <Modal centered show={open} onHide={onDismiss}>\r\n        <Modal.Header>\r\n          <Modal.Title>{t(title)}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{t(message)}</Modal.Body>\r\n        <Modal.Footer>\r\n          {/* <Button onClick={onDismiss}>Cancel</Button> */}\r\n          <Button variant=\"primary\" onClick={onConfirm}>\r\n            {t(\"ok\")}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  ) : (\r\n    <Modal centered show={open} onHide={onDismiss}>\r\n      <Modal.Header>\r\n        <Modal.Title>{t(title)}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {t(message)}\r\n        <p>{t(\"insert_document_in_the_connected_fax\")}</p>\r\n        <p>{t(\"call_number_followed_by_#\")}</p>\r\n        <p>{t(\"iniaite_call\")}</p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        {/* <Button onClick={onDismiss}>Cancel</Button> */}\r\n        <Button variant=\"primary\" onClick={onConfirm}>\r\n          {t(\"ok\")}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ConfirmationDialogContext = React.createContext({});\r\n\r\nconst ConfirmationDialogProvider = ({ children }) => {\r\n  const [dialogOpen, setDialogOpen] = React.useState(false);\r\n  const [dialogConfig, setDialogConfig] = React.useState({});\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const openDialog = ({ title, message, type, actionCallback }) => {\r\n    console.log(\"openDialog -> setDialogOpen\", setDialogOpen);\r\n    console.log(\"openDialog -> dialogOpen\", dialogOpen);\r\n    setDialogOpen(true);\r\n    setDialogConfig({ title, message, type, actionCallback });\r\n  };\r\n\r\n  const resetDialog = () => {\r\n    setDialogOpen(false);\r\n    setDialogConfig({});\r\n  };\r\n\r\n  const onConfirm = () => {\r\n    resetDialog();\r\n    dialogConfig.actionCallback(true);\r\n  };\r\n\r\n  const onDismiss = () => {\r\n    resetDialog();\r\n    dialogConfig.actionCallback(false);\r\n  };\r\n\r\n  return (\r\n    <ConfirmationDialogContext.Provider value={{ openDialog }}>\r\n      <ConfirmationDialog\r\n        open={dialogOpen}\r\n        title={dialogConfig?.title}\r\n        message={dialogConfig?.message}\r\n        type={dialogConfig?.type}\r\n        onConfirm={onConfirm}\r\n        onDismiss={onDismiss}\r\n      />\r\n      {children}\r\n    </ConfirmationDialogContext.Provider>\r\n  );\r\n};\r\n\r\nconst useConfirmationDialog = () => {\r\n  const { openDialog } = React.useContext(ConfirmationDialogContext);\r\n\r\n  const getConfirmation = ({ ...options }) =>\r\n    new Promise((res) => {\r\n      openDialog({ actionCallback: res, ...options });\r\n    });\r\n\r\n  return { getConfirmation };\r\n};\r\n\r\nexport default ConfirmationDialog;\r\nexport { ConfirmationDialogProvider, useConfirmationDialog };\r\n","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\components\\StatusBar\\StatusBar.js",["111","112","113","114","115","116","117","118"],"import React, { useState, useRef } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSun } from \"@fortawesome/free-solid-svg-icons\";\r\nimport io from \"socket.io-client\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  Container,\r\n  Button,\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  NavDropdown,\r\n  Overlay,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const StatusBar = () => {\r\n  const ENDPOINT = process.env.API_ENDPOINT;\r\n  const { t, i18n } = useTranslation();\r\n  const [show, setShow] = useState(false);\r\n  const [currentMode, setCurrentMode] = useState(\"t30\");\r\n  const target = useRef(null);\r\n  const t30 = \"T.30\";\r\n  const t38 = \"T.38\";\r\n\r\n  const handleModeChange = (mode) => {\r\n    console.log(mode);\r\n    const socket = io(ENDPOINT);\r\n    socket.emit(\"new mode\", mode, (ack) => {\r\n      console.log(ack);\r\n      if (ack == \"T.30\") {\r\n        setCurrentMode(\"t30\");\r\n      } else if (ack == \"T.30\") {\r\n        setCurrentMode(\"t38\");\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Container>\r\n      <Navbar\r\n        variant=\"dark\"\r\n        bg=\"dark\"\r\n        expand=\"lg\"\r\n        fixed=\"top\"\r\n        className=\"justify-content-between statbar bg-dark-trans\"\r\n      >\r\n        {/* <Button\r\n          size=\"sm\"\r\n          variant=\"link\"\r\n          ref={target}\r\n          onClick={() => setShow(!show)}\r\n        >\r\n          <FontAwesomeIcon icon={faSun} size=\"lg\" />\r\n        </Button> */}\r\n        <Overlay target={target.current} show={show} placement=\"bottom\">\r\n          {(props) => (\r\n            <Tooltip id=\"overlay-example\" {...props}>\r\n              <Form>\r\n                <Form.Control type=\"range\" custom />\r\n              </Form>\r\n            </Tooltip>\r\n          )}\r\n        </Overlay>\r\n        <Nav.Item\r\n          style={{\r\n            position: \"fixed\" /* or absolute */,\r\n            right: \"50%\",\r\n          }}\r\n        >\r\n          <Nav.Link eventKey=\"disabled\" disabled>\r\n            11:00 AM\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <NavDropdown title={t(currentMode)} id=\"basic-nav-dropdown\">\r\n          <NavDropdown.Item onClick={() => handleModeChange(t30)}>\r\n            {t(\"t30\")}\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Item onClick={() => handleModeChange(t38)}>\r\n            {t(\"t38\")}\r\n          </NavDropdown.Item>\r\n        </NavDropdown>\r\n      </Navbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nStatusBar.propTypes = {};\r\n","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\components\\NavigationBar\\NavigationBar.js",["119","120","121"],"import React, { useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHome, faArrowLeft, faCog } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Navbar, Nav } from \"react-bootstrap\";\r\nimport io from \"socket.io-client\";\r\nlet socket;\r\nexport const NavigationBar = (settingsPage) => {\r\n  const backFunction = () => {\r\n    // if (router.pathname != \"/\") {\r\n    //   router.back();\r\n    // }\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar\r\n        className=\"justify-content-center\"\r\n        style={{ height: \"70px\" }}\r\n        fixed=\"bottom\"\r\n        variant=\"dark\"\r\n        bg=\"dark\"\r\n      >\r\n        <Nav fill variant=\"pills\">\r\n          <Row>\r\n            <Col style={{ marginRight: \"10rem\" }}>\r\n              <Link style={{}} onClick={() => backFunction()}>\r\n                <FontAwesomeIcon size=\"3x\" icon={faArrowLeft} />\r\n              </Link>\r\n            </Col>\r\n            <Col>\r\n              <Link to=\"/\">\r\n                <FontAwesomeIcon size=\"3x\" icon={faHome} />\r\n              </Link>\r\n            </Col>\r\n            <Col style={{ marginLeft: \"10rem\" }}>\r\n              <Link to=\"/settings\">\r\n                <FontAwesomeIcon size=\"3x\" icon={faCog} />\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Nav>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\pages\\index.jsx",["122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport axios from \"axios\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport amen from \"../images/amen.png\";\r\nimport settingsImage from \"../images/settings.png\";\r\nimport search from \"../images/search.png\";\r\nimport phoneCall from \"../images/phone-call.png\";\r\n\r\nimport { RemoveScrollBar } from \"react-remove-scroll-bar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  faHome,\r\n  faArrowLeft,\r\n  faCog,\r\n  faSun,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardDeck,\r\n  Button,\r\n  Navbar,\r\n  Nav,\r\n  Image,\r\n  Form,\r\n  FormControl,\r\n  NavDropdown,\r\n  OverlayTrigger,\r\n  Overlay,\r\n  Popover,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\nimport { RecievingFax } from \"../components/RecievingFax/RecievingFax\";\r\nimport { SendingFax } from \"../components/SendingFax/SendingFax\";\r\nimport { StatusBar } from \"../components/StatusBar/StatusBar\";\r\nimport { useConfirmationDialog } from \"../components/ConfirmationDialogProvider/ConfirmationDialogProvider\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nlet socket;\r\nexport default function Home() {\r\n  const { t, i18n } = useTranslation();\r\n  const [message, setMessage] = useState({});\r\n  const [settings, setSettings] = useState(false);\r\n  const Confirmation = {\r\n    title: \"call_procedure\",\r\n    message: \"\",\r\n    type: 2,\r\n  };\r\n  // const [show, setShow] = useState(false);\r\n  const ENDPOINT = process.env.API_ENDPOINT;\r\n  const { getConfirmation } = useConfirmationDialog();\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.on(\"new message\", (data) => {\r\n      getConfirmation({\r\n        title: data.title,\r\n        message: data.message,\r\n        type: data.type,\r\n      });\r\n      console.log(data.type);\r\n    });\r\n    // CLEAN UP THE EFFECT\r\n    return () => socket.disconnect();\r\n    //\r\n  }, [ENDPOINT]);\r\n\r\n  const handleSettingClick = () => {\r\n    setSettings(!settings);\r\n  };\r\n\r\n  const isDesktopOrLaptop = useMediaQuery({\r\n    query: \"(min-width: 1224px)\",\r\n  });\r\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\r\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\r\n  const isPortrait = useMediaQuery({ query: \"(orientation: portrait)\" });\r\n  const isRetina = useMediaQuery({ query: \"(min-resolution: 2dppx)\" });\r\n\r\n  //All claaNames will be found in index.css\r\n  return (\r\n    <>\r\n      {/* <StatusBar /> */}\r\n      <SendingFax />\r\n      <RecievingFax />\r\n      <RemoveScrollBar />\r\n      <div style={{ position: \"relative\" }}>\r\n        <div>\r\n          <Image\r\n            src={amen}\r\n            alt=\"Picture of amen\"\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"auto\",\r\n            }}\r\n          ></Image>\r\n        </div>\r\n        <Container fluid className=\"indexContainer\">\r\n          <Row display=\"flex\" style={{ height: \"100%\", alignItems: \"center\" }}>\r\n            <Col>\r\n              <Card bg=\"dark\" opacity=\".6\" className=\"cardSizePosition\">\r\n                <Button opacity=\".6\" variant=\"outline-dark\" href=\"/\">\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    className=\"mt-2\"\r\n                    src={search}\r\n                    style={{ width: \"8rem\" }}\r\n                  />\r\n                </Button>\r\n                <Card.Body>\r\n                  <Card.Title style={{ textAlign: \"center\" }}>\r\n                    {t(\"status\")}\r\n                  </Card.Title>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Card href=\"/\" bg=\"dark\" className=\"cardSizePosition\">\r\n                <Button\r\n                  opacity=\".6\"\r\n                  variant=\"outline-dark\"\r\n                  onClick={() => getConfirmation(Confirmation)}\r\n                >\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    className=\"mt-2\"\r\n                    src={phoneCall}\r\n                    style={{ width: \"8rem\" }}\r\n                  />\r\n                </Button>\r\n                <Card.Body>\r\n                  <Card.Title style={{ textAlign: \"center\" }}>\r\n                    {t(\"call_procedure\")}\r\n                  </Card.Title>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Card href=\"/\" bg=\"dark\" className=\"cardSizePosition\">\r\n                <Link to=\"/Settings\" className=\"centerItems\">\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    className=\"mt-2\"\r\n                    src={settingsImage}\r\n                    style={{ width: \"8rem\" }}\r\n                  />\r\n                </Link>\r\n                <Card.Body>\r\n                  <Card.Title style={{ textAlign: \"center\" }}>\r\n                    {t(\"settings\")}\r\n                  </Card.Title>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n      {/* {settings && <Settings />}\r\n      <NavigationBar settingsPage={handleSettingClick} /> */}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\pages\\Settings.jsx",["149","150","151","152","153","154","155","156","157","158","159","160","161"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSun } from \"@fortawesome/free-solid-svg-icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Col,\r\n  ListGroup,\r\n  Item,\r\n  Row,\r\n  Form,\r\n  NavDropdown,\r\n  Button,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\nimport { useConfirmationDialog } from \"../components/ConfirmationDialogProvider/ConfirmationDialogProvider\";\r\nimport { i18 } from \"react-i18next\";\r\nimport { LangContext, context } from \"../languageContext\";\r\n\r\nexport const Settings = () => {\r\n  const { t, i18n } = useTranslation();\r\n  const ENDPOINT = process.env.API_ENDPOINT;\r\n  const { getConfirmation } = useConfirmationDialog();\r\n\r\n  const [contextPad, setContextPad] = useContext(LangContext);\r\n  const [lang, setLang] = useState(\"pad RTL\");\r\n\r\n  // console.log(\"pad\", context.pad, setContext(...context, (pad = \"pad LTR\")));\r\n  console.log(\"pad\", context.pad);\r\n\r\n  useEffect(() => {\r\n    let socket = io(ENDPOINT);\r\n    socket.on(\"new message\", (data) => {\r\n      getConfirmation({\r\n        title: data.title,\r\n        message: data.message,\r\n        type: data.type,\r\n      });\r\n      console.log(data.type);\r\n    });\r\n    // CLEAN UP THE EFFECT\r\n    return () => socket.disconnect();\r\n    //\r\n  }, [ENDPOINT]);\r\n\r\n  const handleChangeLand = (e) => {\r\n    // i18n.changeLanguage(\"ar\");\r\n    // setLangButton(false);\r\n    // const currentLang = i18n.language;\r\n    // if (currentLang === \"en\") {\r\n    //   i18n.changeLanguage(\"ar\");\r\n    //   setLang(\"pad RTL\");\r\n    // } else if (currentLang === \"ar\") {\r\n    //   i18n.changeLanguage(\"en\");\r\n    //   setLang(\"pad LTR\");\r\n    // }\r\n    const currentLang = i18n.language;\r\n    if (currentLang === \"en\") {\r\n      i18n.changeLanguage(\"ar\");\r\n      setContextPad({ pad: \"pad RTL\" });\r\n    } else if (currentLang === \"ar\") {\r\n      i18n.changeLanguage(\"en\");\r\n      setContextPad({ pad: \"pad LTR\" });\r\n    }\r\n  };\r\n  return (\r\n    <LangContext.Consumer>\r\n      {(context) => (\r\n        <div className={contextPad.pad}>\r\n          <ListGroup variant=\"flush\" className=\"listGroupFontSize\">\r\n            <ListGroup.Item action>{t(\"change_time\")}</ListGroup.Item>\r\n            <ListGroup.Item action={contextPad.pad} onClick={handleChangeLand}>\r\n              {t(\"change_lang\")}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item action>{t(\"change_dial_tone\")}</ListGroup.Item>\r\n            <ListGroup.Item action>{t(\"change_connection\")}</ListGroup.Item>\r\n            <ListGroup.Item action>{t(\"change_speed\")}</ListGroup.Item>\r\n            <ListGroup.Item action>\r\n              {\" \"}\r\n              <DropdownButton\r\n                style={{ width: \"100%\" }}\r\n                width=\"100%\"\r\n                variant=\"secondary\"\r\n                id=\"dropdown-basic-button\"\r\n                title={t(\"change_speed\")}\r\n              >\r\n                <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n              </DropdownButton>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n\r\n          <br />\r\n\r\n          <ListGroup className=\"listGroupFontSize\" variant=\"flush\">\r\n            <Link to=\"/settings/SystemInfo\">\r\n              <ListGroup.Item action>{t(\"system_info\")} </ListGroup.Item>\r\n            </Link>\r\n            <ListGroup.Item action>{t(\"system_reset\")}</ListGroup.Item>\r\n          </ListGroup>\r\n        </div>\r\n      )}\r\n    </LangContext.Consumer>\r\n  );\r\n};\r\n","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\pages\\InputScreen.jsx",["162","163","164","165","166","167","168","169","170"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Keyboard from \"react-simple-keyboard\";\r\nimport Arabic from \"../locate/ar/arabic\";\r\nimport English from \"../locate/en/english\";\r\nimport io from \"socket.io-client\";\r\nimport history from \"../history\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSun } from \"@fortawesome/free-solid-svg-icons\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  InputGroup,\r\n  ListGroup,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport arabic from \"../locate/ar/arabic\";\r\n\r\nlet socket;\r\nconst ENDPOINT = process.env.REACT_APP_API_ENDPOINT ?? \"http://localhost:4001/\";\r\n\r\nexport const InputScreen = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [layout, setLayout] = useState(\"default\");\r\n  const [lang, setLang] = useState(English);\r\n  const [rtl, setRtl] = useState(false);\r\n  const keyboard = useRef();\r\n\r\n  const onChange = (input) => {\r\n    setInput(input);\r\n    console.log(\"Input changed\", input);\r\n  };\r\n\r\n  const handleShift = () => {\r\n    const newLayoutName = layout === \"default\" ? \"shift\" : \"default\";\r\n    setLayout(newLayoutName);\r\n  };\r\n\r\n  const onKeyPress = (button) => {\r\n    console.log(\"Button pressed\", button);\r\n\r\n    /**\r\n     * If you want to handle the shift and caps lock buttons\r\n     */\r\n    if (button === \"{shift}\" || button === \"{lock}\") handleShift();\r\n    if (button === \"@\") handleLangChange();\r\n    if (button === \"{enter}\") handleLangSubmit(input);\r\n  };\r\n\r\n  const onChangeInput = (event) => {\r\n    const input = event.target.value;\r\n    setInput(input);\r\n    keyboard.current.setInput(input);\r\n  };\r\n\r\n  const handleLangChange = () => {\r\n    lang === arabic\r\n      ? setLang(English) && setRtl(false)\r\n      : setLang(Arabic) && setRtl(true);\r\n  };\r\n\r\n  const handleLangSubmit = (input) => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"new password\", input, (ack) => {\r\n      setInput(ack);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.on(\"authentication\", (data) => {\r\n      console.log(data);\r\n      data == \"Success\" ? history.push(\"/\") : console.log(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"inputH3\">Password</h3>\r\n      <Form className=\"input\">\r\n        <Form.Control value={input} onChange={onChangeInput} />\r\n      </Form>\r\n      <div className=\"keyboard\">\r\n        <Keyboard\r\n          keyboardRef={(r) => (keyboard.current = r)}\r\n          theme=\"hg-theme-default myTheme1\"\r\n          layoutName={layout}\r\n          onChange={onChange}\r\n          onKeyPress={onKeyPress}\r\n          layout={lang}\r\n          rtl={rtl}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\components\\RecievingFax\\RecievingFax.js",["171","172","173","174"],"import React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const RecievingFax = ({ phoneNumber, documentCount }) => {\r\n  const [show, setShow] = useState(false);\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Modal centered show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{t(\"recieving_fax\")}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {t(\"from\")} {phoneNumber}\r\n        </Modal.Body>\r\n        <Modal.Body>\r\n          {t(\"document\")} {documentCount}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            {t(\"cancel\")}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nRecievingFax.defaultProps = {\r\n  phoneNumber: \"0506065978\",\r\n  documentCount: \"1\",\r\n};\r\n\r\nRecievingFax.propsTypes = {\r\n  phoneNumber: String,\r\n  documentCount: Number,\r\n};\r\n",["175","176"],"C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\components\\SendingFax\\SendingFax.js",["177","178","179"],"import React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal, ProgressBar } from \"react-bootstrap\";\r\n\r\nexport const SendingFax = ({ phoneNumber, documentCount, progress }) => {\r\n  const [show, setShow] = useState(false);\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Modal centered show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{t(\"sending_fax\")}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {t(\"to\")} {phoneNumber}\r\n        </Modal.Body>\r\n        <Modal.Body>\r\n          {t(\"number_of_documents\")} {documentCount}\r\n        </Modal.Body>\r\n        <Modal.Body>\r\n          <ProgressBar animated now={progress} label={`${progress}%`} />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            {t(\"cancel\")}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nSendingFax.defaultProps = {\r\n  phoneNumber: \"0506065978\",\r\n  documentCount: \"1\",\r\n  progress: 45,\r\n};\r\n","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\locate\\en\\english.js",[],"C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\locate\\ar\\arabic.js",[],"C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\pages\\systemInfo.jsx",["180","181","182","183","184","185","186","187","188","189","190","191","192","193","194"],"C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\pages\\SystemInfo.jsx",["195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210"],"import React, { useEffect, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSun } from \"@fortawesome/free-solid-svg-icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Col,\r\n  ListGroup,\r\n  Row,\r\n  Form,\r\n  NavDropdown,\r\n  Button,\r\n  Table,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport { i18 } from \"react-i18next\";\r\n\r\nexport const SystemInfo = () => {\r\n  const { t, i18n } = useTranslation();\r\n  const [lang, setLang] = useState(\"pad RTL\");\r\n  const currentLanguage = i18n.language;\r\n  const handleChangeLand = (e) => {\r\n    // i18n.changeLanguage(\"ar\");\r\n    // setLangButton(false);\r\n    const currentLang = i18n.language;\r\n    if (currentLang === \"en\") {\r\n      i18n.changeLanguage(\"ar\");\r\n\r\n      setLang(\"pad RTL\");\r\n    } else if (currentLang === \"ar\") {\r\n      i18n.changeLanguage(\"en\");\r\n      setLang(\"pad LTR\");\r\n    }\r\n  };\r\n\r\n  const languageEN = () => {\r\n    const currentLang = i18n.language;\r\n    i18n.changeLanguage(\"en\");\r\n    console.log(i18n.changeLanguage(\"en\"));\r\n  };\r\n\r\n  const languageAR = () => {\r\n    const currentLang = i18n.language;\r\n    i18n.changeLanguage(\"ar\");\r\n    console.log(i18n.changeLanguage(\"ar\"));\r\n  };\r\n\r\n  return currentLanguage === \"en\" ? (\r\n    <div className={lang}>\r\n      <div>\r\n        <ListGroup style={{ fontSize: \"18px\" }} variant=\"flush\">\r\n          <ListGroup.Item\r\n            width=\"100%\"\r\n            style={{ textAlign: \"center\", width: \"100%\" }}\r\n            onClick={languageEN}\r\n          >\r\n            {t(\"system_info\")}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </div>\r\n      <br />\r\n\r\n      <Table style={{ fontSize: \"18px\" }} variant=\"dark\" hover>\r\n        <thead>\r\n          <tr>\r\n            <th style={{ textAlign: \"left\" }}>{t(\"device_name\")}</th>\r\n            <th style={{ color: \"gray\" }}>{t(\"amen\")}</th>\r\n          </tr>\r\n          <tr>\r\n            <th style={{ textAlign: \"left\" }}>{t(\"model\")}</th>\r\n            <th style={{ color: \"gray\" }}>108</th>\r\n          </tr>\r\n          <tr>\r\n            <th style={{ textAlign: \"left\" }}>{t(\"ram\")}</th>\r\n            <th style={{ color: \"gray\" }}>2 GB</th>\r\n          </tr>\r\n          <tr>\r\n            <th style={{ textAlign: \"left\" }}>{t(\"resolution\")}</th>\r\n            <th style={{ color: \"gray\" }}>1200x600</th>\r\n          </tr>\r\n        </thead>\r\n      </Table>\r\n\r\n      <br />\r\n      <Table variant=\"dark\" hover>\r\n        <thead>\r\n          <tr>\r\n            <th style={{ textAlign: \"left\" }}>{t(\"version\")}</th>\r\n            <th style={{ color: \"gray\" }}>1.0</th>\r\n          </tr>\r\n        </thead>\r\n      </Table>\r\n\r\n      <br />\r\n    </div>\r\n  ) : (\r\n    <div className={lang}>\r\n      <div>\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item\r\n            width=\"100%\"\r\n            style={{ textAlign: \"center\", width: \"100%\" }}\r\n          >\r\n            {t(\"system_info\")}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </div>\r\n      <br />\r\n\r\n      <Table variant=\"dark\" hover>\r\n        <thead>\r\n          <tr>\r\n            <th style={{ color: \"gray\", textAlign: \"left\" }}>{t(\"amen\")}</th>\r\n            <th onClick={languageAR} style={{ textAlign: \"right\" }}>\r\n              {t(\"device_name\")}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th style={{ color: \"gray\", textAlign: \"left\" }}>108</th>\r\n\r\n            <th style={{ textAlign: \"right\" }}>{t(\"model\")}</th>\r\n          </tr>\r\n          <tr>\r\n            <th style={{ color: \"gray\", textAlign: \"left\" }}>2 GB</th>\r\n            <th style={{ textAlign: \"right\" }}>{t(\"ram\")}</th>\r\n          </tr>\r\n          <tr>\r\n            <th style={{ color: \"gray\", textAlign: \"left\" }}>1200x600</th>\r\n\r\n            <th style={{ textAlign: \"right\" }}>{t(\"resolution\")}</th>\r\n          </tr>\r\n        </thead>\r\n      </Table>\r\n\r\n      <br />\r\n      <Table variant=\"dark\" hover>\r\n        <thead>\r\n          <tr>\r\n            <th style={{ color: \"gray\", textAlign: \"left\" }}>1.0</th>\r\n            <th style={{ textAlign: \"right\" }}>{t(\"version\")}</th>\r\n          </tr>\r\n        </thead>\r\n      </Table>\r\n\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\m.alturki\\Homescreen-1\\ui-client\\src\\languageContext.js",["211","212","213","214"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n// const { Provider } = React.createContext();\r\n\r\n// export const LanguageContextProvider = () => {\r\n//   const { t, i18n } = useTranslation();\r\n\r\n//   const state = {\r\n//     language: \"ar\",\r\n//   };\r\n//   const toggleLanguage = () => {\r\n//     this.setState((prevState) => {\r\n//       return {\r\n//         language: prevState.language === \"ar\" ? \"en\" : \"ar\",\r\n//       };\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <Provider\r\n//       value={{\r\n//         language: state.language,\r\n//         toggleLanguage: toggleLanguage,\r\n//       }}\r\n//     >\r\n//       {this.props.children}\r\n//     </Provider>\r\n//   );\r\n// };\r\n\r\n// export default { LanguageContextProvider };\r\nexport const context = {\r\n  pad: \"pad RTL\",\r\n  lang: \"ar\",\r\n};\r\nexport const LangContext = React.createContext();\r\n",{"ruleId":"215","severity":1,"message":"216","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":27},{"ruleId":"215","severity":1,"message":"219","line":1,"column":29,"nodeType":"217","messageId":"218","endLine":1,"endColumn":38},{"ruleId":"215","severity":1,"message":"220","line":1,"column":40,"nodeType":"217","messageId":"218","endLine":1,"endColumn":48},{"ruleId":"215","severity":1,"message":"221","line":6,"column":10,"nodeType":"217","messageId":"218","endLine":6,"endColumn":21},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"215","severity":1,"message":"219","line":2,"column":17,"nodeType":"217","messageId":"218","endLine":2,"endColumn":26},{"ruleId":"215","severity":1,"message":"226","line":11,"column":3,"nodeType":"217","messageId":"218","endLine":11,"endColumn":24},{"ruleId":"215","severity":1,"message":"227","line":18,"column":3,"nodeType":"217","messageId":"218","endLine":18,"endColumn":7},{"ruleId":"215","severity":1,"message":"228","line":30,"column":10,"nodeType":"217","messageId":"218","endLine":30,"endColumn":14},{"ruleId":"215","severity":1,"message":"229","line":30,"column":16,"nodeType":"217","messageId":"218","endLine":30,"endColumn":23},{"ruleId":"215","severity":1,"message":"221","line":7,"column":8,"nodeType":"217","messageId":"218","endLine":7,"endColumn":19},{"ruleId":"215","severity":1,"message":"220","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":25},{"ruleId":"215","severity":1,"message":"219","line":1,"column":27,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36},{"ruleId":"215","severity":1,"message":"230","line":3,"column":8,"nodeType":"217","messageId":"218","endLine":3,"endColumn":17},{"ruleId":"215","severity":1,"message":"231","line":5,"column":10,"nodeType":"217","messageId":"218","endLine":5,"endColumn":13},{"ruleId":"215","severity":1,"message":"232","line":6,"column":8,"nodeType":"217","messageId":"218","endLine":6,"endColumn":10},{"ruleId":"215","severity":1,"message":"233","line":16,"column":14,"nodeType":"217","messageId":"218","endLine":16,"endColumn":18},{"ruleId":"234","severity":1,"message":"235","line":19,"column":15,"nodeType":"236","messageId":"237","endLine":19,"endColumn":17},{"ruleId":"234","severity":1,"message":"235","line":28,"column":12,"nodeType":"236","messageId":"237","endLine":28,"endColumn":14},{"ruleId":"215","severity":1,"message":"238","line":70,"column":11,"nodeType":"217","messageId":"218","endLine":70,"endColumn":12},{"ruleId":"215","severity":1,"message":"233","line":70,"column":14,"nodeType":"217","messageId":"218","endLine":70,"endColumn":18},{"ruleId":"215","severity":1,"message":"239","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":25},{"ruleId":"215","severity":1,"message":"240","line":3,"column":10,"nodeType":"217","messageId":"218","endLine":3,"endColumn":15},{"ruleId":"215","severity":1,"message":"230","line":5,"column":8,"nodeType":"217","messageId":"218","endLine":5,"endColumn":17},{"ruleId":"215","severity":1,"message":"241","line":9,"column":3,"nodeType":"217","messageId":"218","endLine":9,"endColumn":9},{"ruleId":"215","severity":1,"message":"233","line":21,"column":14,"nodeType":"217","messageId":"218","endLine":21,"endColumn":18},{"ruleId":"215","severity":1,"message":"242","line":22,"column":16,"nodeType":"217","messageId":"218","endLine":22,"endColumn":23},{"ruleId":"234","severity":1,"message":"235","line":33,"column":15,"nodeType":"236","messageId":"237","endLine":33,"endColumn":17},{"ruleId":"234","severity":1,"message":"235","line":35,"column":22,"nodeType":"236","messageId":"237","endLine":35,"endColumn":24},{"ruleId":"215","severity":1,"message":"219","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":26},{"ruleId":"215","severity":1,"message":"232","line":6,"column":8,"nodeType":"217","messageId":"218","endLine":6,"endColumn":10},{"ruleId":"215","severity":1,"message":"243","line":7,"column":5,"nodeType":"217","messageId":"218","endLine":7,"endColumn":11},{"ruleId":"215","severity":1,"message":"244","line":1,"column":27,"nodeType":"217","messageId":"218","endLine":1,"endColumn":33},{"ruleId":"215","severity":1,"message":"245","line":3,"column":8,"nodeType":"217","messageId":"218","endLine":3,"endColumn":13},{"ruleId":"215","severity":1,"message":"246","line":14,"column":3,"nodeType":"217","messageId":"218","endLine":14,"endColumn":9},{"ruleId":"215","severity":1,"message":"247","line":15,"column":3,"nodeType":"217","messageId":"218","endLine":15,"endColumn":14},{"ruleId":"215","severity":1,"message":"248","line":16,"column":3,"nodeType":"217","messageId":"218","endLine":16,"endColumn":8},{"ruleId":"215","severity":1,"message":"240","line":17,"column":3,"nodeType":"217","messageId":"218","endLine":17,"endColumn":8},{"ruleId":"215","severity":1,"message":"249","line":24,"column":3,"nodeType":"217","messageId":"218","endLine":24,"endColumn":11},{"ruleId":"215","severity":1,"message":"250","line":26,"column":3,"nodeType":"217","messageId":"218","endLine":26,"endColumn":9},{"ruleId":"215","severity":1,"message":"251","line":27,"column":3,"nodeType":"217","messageId":"218","endLine":27,"endColumn":6},{"ruleId":"215","severity":1,"message":"252","line":29,"column":3,"nodeType":"217","messageId":"218","endLine":29,"endColumn":7},{"ruleId":"215","severity":1,"message":"253","line":30,"column":3,"nodeType":"217","messageId":"218","endLine":30,"endColumn":14},{"ruleId":"215","severity":1,"message":"254","line":31,"column":3,"nodeType":"217","messageId":"218","endLine":31,"endColumn":14},{"ruleId":"215","severity":1,"message":"255","line":32,"column":3,"nodeType":"217","messageId":"218","endLine":32,"endColumn":17},{"ruleId":"215","severity":1,"message":"256","line":33,"column":3,"nodeType":"217","messageId":"218","endLine":33,"endColumn":10},{"ruleId":"215","severity":1,"message":"257","line":34,"column":3,"nodeType":"217","messageId":"218","endLine":34,"endColumn":10},{"ruleId":"215","severity":1,"message":"258","line":35,"column":3,"nodeType":"217","messageId":"218","endLine":35,"endColumn":10},{"ruleId":"215","severity":1,"message":"259","line":39,"column":10,"nodeType":"217","messageId":"218","endLine":39,"endColumn":19},{"ruleId":"215","severity":1,"message":"233","line":45,"column":14,"nodeType":"217","messageId":"218","endLine":45,"endColumn":18},{"ruleId":"215","severity":1,"message":"260","line":46,"column":10,"nodeType":"217","messageId":"218","endLine":46,"endColumn":17},{"ruleId":"215","severity":1,"message":"261","line":46,"column":19,"nodeType":"217","messageId":"218","endLine":46,"endColumn":29},{"ruleId":"262","severity":1,"message":"263","line":69,"column":6,"nodeType":"264","endLine":69,"endColumn":16,"suggestions":"265"},{"ruleId":"215","severity":1,"message":"266","line":71,"column":9,"nodeType":"217","messageId":"218","endLine":71,"endColumn":27},{"ruleId":"215","severity":1,"message":"267","line":75,"column":9,"nodeType":"217","messageId":"218","endLine":75,"endColumn":26},{"ruleId":"215","severity":1,"message":"268","line":78,"column":9,"nodeType":"217","messageId":"218","endLine":78,"endColumn":20},{"ruleId":"215","severity":1,"message":"269","line":79,"column":9,"nodeType":"217","messageId":"218","endLine":79,"endColumn":25},{"ruleId":"215","severity":1,"message":"270","line":80,"column":9,"nodeType":"217","messageId":"218","endLine":80,"endColumn":19},{"ruleId":"215","severity":1,"message":"271","line":81,"column":9,"nodeType":"217","messageId":"218","endLine":81,"endColumn":17},{"ruleId":"215","severity":1,"message":"239","line":4,"column":10,"nodeType":"217","messageId":"218","endLine":4,"endColumn":25},{"ruleId":"215","severity":1,"message":"240","line":5,"column":10,"nodeType":"217","messageId":"218","endLine":5,"endColumn":15},{"ruleId":"215","severity":1,"message":"230","line":6,"column":8,"nodeType":"217","messageId":"218","endLine":6,"endColumn":17},{"ruleId":"215","severity":1,"message":"272","line":10,"column":3,"nodeType":"217","messageId":"218","endLine":10,"endColumn":6},{"ruleId":"215","severity":1,"message":"273","line":12,"column":3,"nodeType":"217","messageId":"218","endLine":12,"endColumn":7},{"ruleId":"215","severity":1,"message":"274","line":13,"column":3,"nodeType":"217","messageId":"218","endLine":13,"endColumn":6},{"ruleId":"215","severity":1,"message":"252","line":14,"column":3,"nodeType":"217","messageId":"218","endLine":14,"endColumn":7},{"ruleId":"215","severity":1,"message":"254","line":15,"column":3,"nodeType":"217","messageId":"218","endLine":15,"endColumn":14},{"ruleId":"215","severity":1,"message":"241","line":16,"column":3,"nodeType":"217","messageId":"218","endLine":16,"endColumn":9},{"ruleId":"215","severity":1,"message":"275","line":21,"column":10,"nodeType":"217","messageId":"218","endLine":21,"endColumn":13},{"ruleId":"215","severity":1,"message":"276","line":30,"column":10,"nodeType":"217","messageId":"218","endLine":30,"endColumn":14},{"ruleId":"215","severity":1,"message":"277","line":30,"column":16,"nodeType":"217","messageId":"218","endLine":30,"endColumn":23},{"ruleId":"262","severity":1,"message":"263","line":48,"column":6,"nodeType":"264","endLine":48,"endColumn":16,"suggestions":"278"},{"ruleId":"215","severity":1,"message":"279","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":24},{"ruleId":"215","severity":1,"message":"239","line":8,"column":10,"nodeType":"217","messageId":"218","endLine":8,"endColumn":25},{"ruleId":"215","severity":1,"message":"240","line":9,"column":10,"nodeType":"217","messageId":"218","endLine":9,"endColumn":15},{"ruleId":"215","severity":1,"message":"230","line":10,"column":8,"nodeType":"217","messageId":"218","endLine":10,"endColumn":17},{"ruleId":"215","severity":1,"message":"241","line":13,"column":3,"nodeType":"217","messageId":"218","endLine":13,"endColumn":9},{"ruleId":"215","severity":1,"message":"253","line":14,"column":3,"nodeType":"217","messageId":"218","endLine":14,"endColumn":14},{"ruleId":"215","severity":1,"message":"280","line":15,"column":3,"nodeType":"217","messageId":"218","endLine":15,"endColumn":13},{"ruleId":"215","severity":1,"message":"281","line":16,"column":3,"nodeType":"217","messageId":"218","endLine":16,"endColumn":12},{"ruleId":"234","severity":1,"message":"235","line":75,"column":12,"nodeType":"236","messageId":"237","endLine":75,"endColumn":14},{"ruleId":"215","severity":1,"message":"230","line":3,"column":8,"nodeType":"217","messageId":"218","endLine":3,"endColumn":17},{"ruleId":"215","severity":1,"message":"231","line":5,"column":10,"nodeType":"217","messageId":"218","endLine":5,"endColumn":13},{"ruleId":"215","severity":1,"message":"233","line":9,"column":14,"nodeType":"217","messageId":"218","endLine":9,"endColumn":18},{"ruleId":"215","severity":1,"message":"282","line":12,"column":9,"nodeType":"217","messageId":"218","endLine":12,"endColumn":19},{"ruleId":"222","replacedBy":"283"},{"ruleId":"224","replacedBy":"284"},{"ruleId":"215","severity":1,"message":"230","line":3,"column":8,"nodeType":"217","messageId":"218","endLine":3,"endColumn":17},{"ruleId":"215","severity":1,"message":"233","line":8,"column":14,"nodeType":"217","messageId":"218","endLine":8,"endColumn":18},{"ruleId":"215","severity":1,"message":"282","line":11,"column":9,"nodeType":"217","messageId":"218","endLine":11,"endColumn":19},{"ruleId":"215","severity":1,"message":"219","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":26},{"ruleId":"215","severity":1,"message":"232","line":2,"column":8,"nodeType":"217","messageId":"218","endLine":2,"endColumn":10},{"ruleId":"215","severity":1,"message":"239","line":4,"column":10,"nodeType":"217","messageId":"218","endLine":4,"endColumn":25},{"ruleId":"215","severity":1,"message":"240","line":5,"column":10,"nodeType":"217","messageId":"218","endLine":5,"endColumn":15},{"ruleId":"215","severity":1,"message":"230","line":6,"column":8,"nodeType":"217","messageId":"218","endLine":6,"endColumn":17},{"ruleId":"215","severity":1,"message":"272","line":9,"column":3,"nodeType":"217","messageId":"218","endLine":9,"endColumn":6},{"ruleId":"215","severity":1,"message":"274","line":11,"column":3,"nodeType":"217","messageId":"218","endLine":11,"endColumn":6},{"ruleId":"215","severity":1,"message":"252","line":12,"column":3,"nodeType":"217","messageId":"218","endLine":12,"endColumn":7},{"ruleId":"215","severity":1,"message":"254","line":13,"column":3,"nodeType":"217","messageId":"218","endLine":13,"endColumn":14},{"ruleId":"215","severity":1,"message":"241","line":14,"column":3,"nodeType":"217","messageId":"218","endLine":14,"endColumn":9},{"ruleId":"215","severity":1,"message":"275","line":16,"column":10,"nodeType":"217","messageId":"218","endLine":16,"endColumn":13},{"ruleId":"215","severity":1,"message":"233","line":19,"column":14,"nodeType":"217","messageId":"218","endLine":19,"endColumn":18},{"ruleId":"285","severity":2,"message":"286","line":19,"column":23,"nodeType":"217","endLine":19,"endColumn":37},{"ruleId":"215","severity":1,"message":"277","line":20,"column":16,"nodeType":"217","messageId":"218","endLine":20,"endColumn":23},{"ruleId":"285","severity":2,"message":"287","line":20,"column":27,"nodeType":"217","endLine":20,"endColumn":35},{"ruleId":"215","severity":1,"message":"219","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":26},{"ruleId":"215","severity":1,"message":"232","line":2,"column":8,"nodeType":"217","messageId":"218","endLine":2,"endColumn":10},{"ruleId":"215","severity":1,"message":"239","line":4,"column":10,"nodeType":"217","messageId":"218","endLine":4,"endColumn":25},{"ruleId":"215","severity":1,"message":"240","line":5,"column":10,"nodeType":"217","messageId":"218","endLine":5,"endColumn":15},{"ruleId":"215","severity":1,"message":"230","line":6,"column":8,"nodeType":"217","messageId":"218","endLine":6,"endColumn":17},{"ruleId":"215","severity":1,"message":"227","line":7,"column":10,"nodeType":"217","messageId":"218","endLine":7,"endColumn":14},{"ruleId":"215","severity":1,"message":"272","line":10,"column":3,"nodeType":"217","messageId":"218","endLine":10,"endColumn":6},{"ruleId":"215","severity":1,"message":"274","line":12,"column":3,"nodeType":"217","messageId":"218","endLine":12,"endColumn":6},{"ruleId":"215","severity":1,"message":"252","line":13,"column":3,"nodeType":"217","messageId":"218","endLine":13,"endColumn":7},{"ruleId":"215","severity":1,"message":"254","line":14,"column":3,"nodeType":"217","messageId":"218","endLine":14,"endColumn":14},{"ruleId":"215","severity":1,"message":"241","line":15,"column":3,"nodeType":"217","messageId":"218","endLine":15,"endColumn":9},{"ruleId":"215","severity":1,"message":"288","line":17,"column":3,"nodeType":"217","messageId":"218","endLine":17,"endColumn":12},{"ruleId":"215","severity":1,"message":"275","line":19,"column":10,"nodeType":"217","messageId":"218","endLine":19,"endColumn":13},{"ruleId":"215","severity":1,"message":"289","line":25,"column":9,"nodeType":"217","messageId":"218","endLine":25,"endColumn":25},{"ruleId":"215","severity":1,"message":"290","line":40,"column":11,"nodeType":"217","messageId":"218","endLine":40,"endColumn":22},{"ruleId":"215","severity":1,"message":"290","line":46,"column":11,"nodeType":"217","messageId":"218","endLine":46,"endColumn":22},{"ruleId":"215","severity":1,"message":"216","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":27},{"ruleId":"215","severity":1,"message":"219","line":1,"column":29,"nodeType":"217","messageId":"218","endLine":1,"endColumn":38},{"ruleId":"215","severity":1,"message":"220","line":1,"column":40,"nodeType":"217","messageId":"218","endLine":1,"endColumn":48},{"ruleId":"215","severity":1,"message":"279","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":24},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'LangContext' is defined but never used.","no-native-reassign",["291"],"no-negated-in-lhs",["292"],"'useConfirmationDialog' is defined but never used.","'Link' is defined but never used.","'Side' is assigned a value but never used.","'setSide' is assigned a value but never used.","'PropTypes' is defined but never used.","'fas' is defined but never used.","'io' is defined but never used.","'i18n' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'t' is assigned a value but never used.","'FontAwesomeIcon' is defined but never used.","'faSun' is defined but never used.","'Button' is defined but never used.","'setShow' is assigned a value but never used.","'socket' is defined but never used.","'useRef' is defined but never used.","'axios' is defined but never used.","'faHome' is defined but never used.","'faArrowLeft' is defined but never used.","'faCog' is defined but never used.","'CardDeck' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavDropdown' is defined but never used.","'OverlayTrigger' is defined but never used.","'Overlay' is defined but never used.","'Popover' is defined but never used.","'Tooltip' is defined but never used.","'StatusBar' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getConfirmation'. Either include it or remove the dependency array.","ArrayExpression",["293"],"'handleSettingClick' is assigned a value but never used.","'isDesktopOrLaptop' is assigned a value but never used.","'isBigScreen' is assigned a value but never used.","'isTabletOrMobile' is assigned a value but never used.","'isPortrait' is assigned a value but never used.","'isRetina' is assigned a value but never used.","'Col' is defined but never used.","'Item' is defined but never used.","'Row' is defined but never used.","'i18' is defined but never used.","'lang' is assigned a value but never used.","'setLang' is assigned a value but never used.",["294"],"'useTranslation' is defined but never used.","'InputGroup' is defined but never used.","'ListGroup' is defined but never used.","'handleShow' is assigned a value but never used.",["291"],["292"],"react-hooks/rules-of-hooks","React Hook \"useTranslation\" is called in function \"systemInfo\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useState\" is called in function \"systemInfo\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'Container' is defined but never used.","'handleChangeLand' is assigned a value but never used.","'currentLang' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"295","fix":"296"},{"desc":"295","fix":"297"},"Update the dependencies array to be: [ENDPOINT, getConfirmation]",{"range":"298","text":"299"},{"range":"300","text":"299"},[1925,1935],"[ENDPOINT, getConfirmation]",[1461,1471]]